name: nestjs
description: |
  Example component that includes a Nest.js and a postgres database.
keywords:
  - typescript
  - nest.js
  - postgres

secrets:
  db_user:
    description: Root user to assign to the component's database
    default: architect
  db_pass:
    description: Root password to assign to the component's database
    default: secret
  db_name:
    description: Name of the database the component will store content in
    default: api-db
  db_port:
    description: Port for the database
    default: 5432
  api_port:
    description: Port for api
    default: 3000

services:
  api-db:
    image: postgres:12
    interfaces:
      main:
        port: ${{ secrets.db_port }}
        protocol: postgresql
    environment:
      POSTGRES_USER: ${{ secrets.db_user }}
      POSTGRES_PASSWORD: ${{ secrets.db_pass }}
      POSTGRES_DB: ${{ secrets.db_name }}

  api:
    depends_on:
      - api-db
    build:
      context: .
      args:
        NODE_ENV: production
    interfaces:
      main:
        port: ${{ secrets.api_port }}
        ingress:
          subdomain: api
    liveness_probe:
      command: curl --fail localhost:3000
      interval: 30s
      failure_threshold: 3
    environment:
      PORT: ${{ secrets.api_port }}
      PG_USER: ${{ secrets.db_user }}
      PG_PASSWORD: ${{ secrets.db_pass }}
      PG_DATABASE: ${{ secrets.db_name }}
      DB_HOST: ${{ services.api-db.interfaces.main.host }}
      DB_PORT: ${{ services.api-db.interfaces.main.port }}
    debug:
      command: npm run start:debug
      build:
        args:
          NODE_ENV: development
      volumes:
        src:
          mount_path: /usr/src/app
          host_path: .
